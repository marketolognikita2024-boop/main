import os
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, filters, ContextTypes

TOKEN = os.getenv("7670672608:AAHASjUT5IPw_CGbuFXrVejR35ExuJjTDr0")

questions = [
    "1Ô∏è‚É£ –ï—Å—Ç—å –ª–∏ —É –≤–∞—Å CRM –∏ —Ñ–∏–∫—Å–∏—Ä—É—é—Ç—Å—è –ª–∏ –≤—Å–µ –∑–∞—è–≤–∫–∏?",
    "2Ô∏è‚É£ –ü–æ–Ω–∏–º–∞–µ—Ç–µ –ª–∏ –≤—ã, —Å–∫–æ–ª—å–∫–æ —Å—Ç–æ–∏—Ç 1 –∫–ª–∏–µ–Ω—Ç (CAC)?",
    "3Ô∏è‚É£ –ï—Å—Ç—å –ª–∏ —Å–∏—Å—Ç–µ–º–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –ø—Ä–æ–¥–∞–∂ –∏ –≤–æ–∑–≤—Ä–∞—Ç–æ–≤ –∫–ª–∏–µ–Ω—Ç–æ–≤?",
    "4Ô∏è‚É£ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç–µ –ª–∏ –≤—ã –±–æ–ª–µ–µ 2 –∫–∞–Ω–∞–ª–æ–≤ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤?",
    "5Ô∏è‚É£ –£ –∫–æ–º–∞–Ω–¥—ã –µ—Å—Ç—å —Å–∫—Ä–∏–ø—Ç—ã –∏ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –ø—Ä–æ–¥–∞–∂?",
    "6Ô∏è‚É£ –ï—Å—Ç—å –ª–∏ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —á—ë—Ç–∫–æ–µ –£–¢–ü?",
    "7Ô∏è‚É£ –†–µ–∫–ª–∞–º–∞ –¥–∞—ë—Ç –ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–π –ø–æ—Ç–æ–∫ –ª–∏–¥–æ–≤?",
    "8Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç–µ –ª–∏ –≤—ã, –∫–∞–∫–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –ø—Ä–∏–Ω–æ—Å—è—Ç –ø—Ä–∏–±—ã–ª—å?",
    "9Ô∏è‚É£ –ë–∏–∑–Ω–µ—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –≤–∞—Å —Ö–æ—Ç—è –±—ã 2 –Ω–µ–¥–µ–ª–∏?",
    "üîü –ö–ª–∏–µ–Ω—Ç—ã –ø—Ä–∏—Ö–æ–¥—è—Ç –Ω–µ —Ç–æ–ª—å–∫–æ –ø–æ —Å–∞—Ä–∞—Ñ–∞–Ω—É?"
]

user_answers = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    user_answers[chat_id] = {"q": 0, "score": 0}
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç! üëã –≠—Ç–æ —Ç–µ—Å—Ç: ¬´–ì–¥–µ —Ç–≤–æ–π –±–∏–∑–Ω–µ—Å —Ç–µ—Ä—è–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤?¬ª\n–û—Ç–≤–µ—Ç—å —á–µ—Å—Ç–Ω–æ –Ω–∞ 10 –≤–æ–ø—Ä–æ—Å–æ–≤ (–¥–∞/–Ω–µ—Ç). –ù–∞—á–Ω—ë–º!")
    await ask_question(update, context)

async def ask_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    user_data = user_answers.get(chat_id)
    q_index = user_data["q"]
    if q_index < len(questions):
        reply_markup = ReplyKeyboardMarkup([["–î–∞", "–ù–µ—Ç"]], one_time_keyboard=True, resize_keyboard=True)
        await update.message.reply_text(questions[q_index], reply_markup=reply_markup)
    else:
        score = user_data["score"]
        result = interpret_score(score)
        await update.message.reply_text(result + "\n\n–•–æ—á–µ—à—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π —Ä–∞–∑–±–æ—Ä ‚Äî –Ω–∞–ø–∏—à–∏ ¬´–∞–Ω–∞–ª–∏–∑¬ª @nissan3501")
        del user_answers[chat_id]

def interpret_score(score):
    if score <= 3:
        return "üü• –£—Ä–æ–≤–µ–Ω—å —Å–∏—Å—Ç–µ–º–Ω–æ—Å—Ç–∏: –Ω–∏–∑–∫–∏–π. –ë–∏–∑–Ω–µ—Å –¥–µ—Ä–∂–∏—Ç—Å—è –Ω–∞ —Ö–∞–æ—Å–µ –∏ —Å–∞—Ä–∞—Ñ–∞–Ω–µ."
    elif score <= 7:
        return "üü® –°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å. –ï—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∞, –Ω–æ –º–Ω–æ–≥–æ –ø–æ—Ç–µ—Ä—å –∫–ª–∏–µ–Ω—Ç–æ–≤."
    else:
        return "üü© –í—ã—Å–æ–∫–∏–π —É—Ä–æ–≤–µ–Ω—å. –û—Ç–ª–∏—á–Ω–æ! –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Å–∏—Å—Ç–µ–º–∞, –Ω–æ –µ—Å—Ç—å –∑–æ–Ω—ã —Ä–æ—Å—Ç–∞."

async def handle_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    text = update.message.text.lower()
    if chat_id not in user_answers:
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ç–µ—Å—Ç.")
        return
    user_data = user_answers[chat_id]
    if text == "–¥–∞":
        user_data["score"] += 1
    user_data["q"] += 1
    await ask_question(update, context)

def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_answer))
    app.run_polling()

if __name__ == "__main__":
    main()
